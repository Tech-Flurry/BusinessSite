@using Microsoft.AspNetCore.Components.Authorization
@using TechFlurry.BusinessSite.App.Interops
@inject NavigationManager Navigator
@inject IFirebaseInterop Firebase
<CascadingAuthenticationState>
    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p role="alert">You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>404 - TechFlurry | Software Services Company</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <section id="slider" class="slider-element min-vh-60 min-vh-md-100 dark error404-wrap include-header" style="background: url(images/landing/static.jpg) center;">
                    <div class="slider-inner">
                        <div class="vertical-middle">
                            <div class="container text-center py-5 py-md-0">
                                <div class="error404">404</div>
                                <div class="heading-block border-bottom-0">
                                    <h4>Ooopps.! The Page you were looking for, couldn't be found.</h4>
                                </div>
                            </div>
                        </div>
                    </div>
                </section>
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@code {
    protected async override Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (firstRender)
        {
            await Firebase.InitFirebase();
        }
    }
}