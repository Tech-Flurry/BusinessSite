@using Blazored.LocalStorage
@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using TechFlurry.BusinessSite.App.Authentication
@inject IAuthenticationService AuthService
@inject AuthenticationOptions AuthOptions
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorageService
@inject NavigationManager Navigator
@inject SignOutSessionStateManager SignOutManager

<header id="header" class="full-header header-size-sm">
    <div id="header-wrap">
        <div class="container">
            <div class="header-row">
                <_Logo></_Logo>
                <div id="primary-menu-trigger">
                    <svg class="svg-trigger" viewBox="0 0 100 100"><path d="m 30,33 h 40 c 3.722839,0 7.5,3.126468 7.5,8.578427 0,5.451959 -2.727029,8.421573 -7.5,8.421573 h -20"></path><path d="m 30,50 h 40"></path><path d="m 70,67 h -40 c 0,0 -7.5,-0.802118 -7.5,-8.365747 0,-7.563629 7.5,-8.634253 7.5,-8.634253 h 20"></path></svg>
                </div>
                <nav class="primary-menu">
                    <ul class="menu-container">
                        <li class="menu-item">
                            <a class="menu-link" href="/"><div>Home</div><span>Our Introduction</span></a>
                        </li>
                        <li class="menu-item">
                            <a class="menu-link" href="javascript:void()"><div>Services</div><span>What we Do?</span></a>
                            <ul class="sub-menu-container">
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/CustomSoftwareDevelopment"><div><i class="icon-desktop"></i>Custom Software Development</div></a>
                                </li>
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/ProductDevelopment"><div><i class="icon-laptop-code"></i>Product Development</div></a>
                                </li>
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/MobileAppDevelopment"><div><i class="icon-phone2"></i>Mobile Application Development</div></a>
                                </li>
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/WordpressDevelopment"><div><i class="icon-wordpress"></i>Wordpress Development</div></a>
                                </li>
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/DMM"><div><i class="icon-bars1"></i>Digital Media Marketing</div></a>
                                </li>
                                <li class="menu-item">
                                    <a class="menu-link" href="/Services/DedicatedResources"><div><i class="icon-headset"></i>Dedicated Resources</div></a>
                                </li>
                            </ul>
                        </li>
                        <li class="menu-item">
                            <a class="menu-link" href="/Blogs"><div>Blog</div><span>Latest Articles</span></a>
                        </li>
                        <AuthorizeView>
                            <NotAuthorized>
                                <li class="menu-item">
                                    <a class="menu-link" href="javascript:void()" @onclick="OnLoginClicked"><div>Login</div><span>Login to your Account</span></a>
                                </li>
                            </NotAuthorized>
                            <Authorized>
                                @{
                                    var name = context?.User?.Claims.FirstOrDefault(x => x.Type.ToLower() == "name")?.Value.Split()?.FirstOrDefault();
                                }
                                <li class="menu-item">
                                    <a class="menu-link" href="javascript:void()"><div>@name</div><span></span></a>
                                    <ul class="sub-menu-container">
                                        <li class="menu-item">
                                            <a class="menu-link" href="javascript:void()" @onclick="OnProfileClicked"><div><i class="icon-line-head"></i>Update Profile</div></a>
                                        </li>
                                        <li class="menu-item">
                                            <a class="menu-link" href="javascript:void()" @onclick="OnResetClicked"><div><i class="icon-key1"></i>Reset Password</div></a>
                                        </li>
                                        <li class="menu-item">
                                            <a class="menu-link" href="javascript:void()" @onclick="Logout"><div><i class="icon-line2-logout"></i>Logout</div></a>
                                        </li>
                                    </ul>
                                </li>
                            </Authorized>
                        </AuthorizeView>
                    </ul>

                </nav>

            </div>
        </div>
    </div>
    <div class="header-wrap-clone"></div>
</header>
@code {
    private AuthorizeView? _authorizeView;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        AuthStateProvider.AuthenticationStateChanged += OnAuthStateChange;
    }
}

@functions {
    private async void SaveReturnUrl()
    {
        var currentUri = Navigator.Uri.Replace(Navigator.BaseUri, "/");
        await LocalStorageService.SetItemAsync(Constants.RETURN_URL, currentUri);
    }
    async void OnAuthStateChange(Task<AuthenticationState> authenticationState)
    {
        var authState = await authenticationState;
        StateHasChanged();
    }
    private void OnLoginClicked()
    {
        Navigator.NavigateTo($"authentication/login?returnUrl={Uri.EscapeDataString(Navigator.Uri)}");
    }
    private void OnProfileClicked()
    {
        SaveReturnUrl();
        Navigator.NavigateTo($"https://techflurryltd.b2clogin.com/techflurryltd.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_Profile_update&client_id={AuthOptions.AppId}&nonce=defaultNonce&redirect_uri=https%3A%2F%2Flocalhost%3A7032%2FAuthentication%2FLogin&scope=openid&response_type=id_token&prompt=login");
    }
    private void OnResetClicked()
    {
        SaveReturnUrl();
        Navigator.NavigateTo($"https://techflurryltd.b2clogin.com/techflurryltd.onmicrosoft.com/oauth2/v2.0/authorize?p=B2C_1_Password_Reset&client_id={AuthOptions.AppId}&nonce=defaultNonce&redirect_uri=https%3A%2F%2Flocalhost%3A7032%2FAuthentication%2FLogin&scope=openid&response_type=id_token&prompt=login");
    }
    private async void Logout()
    {
        await SignOutManager.SetSignOutState();
        Navigator.NavigateTo("authentication/logout");
    }
}
